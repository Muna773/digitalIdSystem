/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Citizen as PrismaCitizen } from "@prisma/client";

export class CitizenServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.CitizenCountArgs, "select">): Promise<number> {
    return this.prisma.citizen.count(args);
  }

  async citizens(args: Prisma.CitizenFindManyArgs): Promise<PrismaCitizen[]> {
    return this.prisma.citizen.findMany(args);
  }
  async citizen(
    args: Prisma.CitizenFindUniqueArgs
  ): Promise<PrismaCitizen | null> {
    return this.prisma.citizen.findUnique(args);
  }
  async createCitizen(args: Prisma.CitizenCreateArgs): Promise<PrismaCitizen> {
    return this.prisma.citizen.create(args);
  }
  async updateCitizen(args: Prisma.CitizenUpdateArgs): Promise<PrismaCitizen> {
    return this.prisma.citizen.update(args);
  }
  async deleteCitizen(args: Prisma.CitizenDeleteArgs): Promise<PrismaCitizen> {
    return this.prisma.citizen.delete(args);
  }
}
